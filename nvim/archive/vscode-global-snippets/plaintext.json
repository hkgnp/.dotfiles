{
    "readme.md": {
        "prefix": "readme",
        "body": [
            "## Project title",
            "",
            "A little info about your project and/ or overview that explains **what** the project is about.",
            "",
            "## Motivation",
            "",
            "A short description of the motivation behind the creation and maintenance of the project. This should explain **why** the project exists.",
            "",
            "## Build status",
            "",
            "Build status of continus integration i.e. travis, appveyor etc. Ex. -",
            "",
            "[![Build Status](https://travis-ci.org/akashnimare/foco.svg?branch=master)](https://travis-ci.org/akashnimare/foco)",
            "[![Windows Build Status](https://ci.appveyor.com/api/projects/status/github/akashnimare/foco?branch=master&svg=true)](https://ci.appveyor.com/project/akashnimare/foco/branch/master)",
            "",
            "## Code style",
            "",
            "If you're using any code style like xo, standard etc. That will help others while contributing to your project. Ex. -",
            "",
            "[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)",
            "",
            "## Screenshots",
            "",
            "Include logo/demo screenshot etc.",
            "",
            "## Tech/framework used",
            "",
            "Ex. -",
            "",
            "<b>Built with</b>",
            "",
            "- [Electron](https://electron.atom.io)",
            "",
            "## Features",
            "",
            "What makes your project stand out?",
            "",
            "## Code Example",
            "",
            "Show what the library does as concisely as possible, developers should be able to figure out **how** your project solves their problem by looking at the code example. Make sure the API you are showing off is obvious, and that your code is short and concise.",
            "",
            "## Installation",
            "",
            "Provide step by step series of examples and explanations about how to get a development env running.",
            "",
            "## API Reference",
            "",
            "Depending on the size of the project, if it is small and simple enough the reference docs can be added to the README. For medium size to larger projects it is important to at least provide a link to where the API reference docs live.",
            "",
            "## Tests",
            "",
            "Describe and show how to run the tests with code examples.",
            "",
            "## How to use?",
            "",
            "If people like your project they’ll want to learn how they can use it. To do so include step by step guide to use your project.",
            "",
            "## Contribute",
            "",
            "Let people know how they can contribute into your project. A [contributing guideline](https://github.com/zulip/zulip-electron/blob/master/CONTRIBUTING.md) will be a big plus.",
            "",
            "## Credits",
            "",
            "Give proper credits. This could be a link to any repo which inspired you to build this project, any blogposts or links to people who contrbuted in this project.",
            "",
            "#### Anything else that seems useful",
            "",
            "## License",
            "",
            "A short snippet describing the license (MIT, Apache etc)",
            "",
            "MIT © [Yourname]()",
            ""
        ],
        "description": "Readme.MD template"
    },
    {
        "prefix": "nodeignore",
        "body": ".DS_Store # Logs logs *.log npm-debug.log* yarn-debug.log* yarn-error.log* lerna-debug.log* .pnpm-debug.log* # Diagnostic reports (https://nodejs.org/api/report.html) report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json # Runtime data pids *.pid *.seed *.pid.lock # Directory for instrumented libs generated by jscoverage/JSCover lib-cov # Coverage directory used by tools like istanbul coverage *.lcov # nyc test coverage .nyc_output # Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files) .grunt # Bower dependency directory (https://bower.io/) bower_components # node-waf configuration .lock-wscript # Compiled binary addons (https://nodejs.org/api/addons.html) build/Release # Dependency directories node_modules/ jspm_packages/ # Snowpack dependency directory (https://snowpack.dev/) web_modules/ # TypeScript cache *.tsbuildinfo # Optional npm cache directory .npm # Optional eslint cache .eslintcache # Optional stylelint cache .stylelintcache # Microbundle cache .rpt2_cache/ .rts2_cache_cjs/ .rts2_cache_es/ .rts2_cache_umd/ # Optional REPL history .node_repl_history # Output of 'npm pack' *.tgz # Yarn Integrity file .yarn-integrity # dotenv environment variable files .env .env.development.local .env.test.local .env.production.local .env.local # parcel-bundler cache (https://parceljs.org/) .cache .parcel-cache # Next.js build output .next out # Nuxt.js build / generate output .nuxt dist # Gatsby files .cache/ # Comment in the public line in if your project uses Gatsby and not Next.js # https://nextjs.org/blog/next-9-1#public-directory-support # public # vuepress build output .vuepress/dist # vuepress v2.x temp and cache directory .temp .cache # Docusaurus cache and generated files .docusaurus # Serverless directories .serverless/ # FuseBox cache .fusebox/ # DynamoDB Local files .dynamodb/ # TernJS port file .tern-port # Stores VSCode versions used for testing VSCode extensions .vscode-test # yarn v2 .yarn/cache .yarn/unplugged .yarn/build-state.yml .yarn/install-state.gz .pnp.*",
        "description": "Gitignore for node"
    }
}
